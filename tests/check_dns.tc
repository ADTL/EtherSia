#include "Arduino.h"

#include "dns.h"
#include <stdio.h>

#suite DNS


#test dnsMakeRequest_ipv6_aelius
uint8_t buffer[256];
uint16_t len = dnsMakeRequest((uint8_t*)buffer, "ipv6.aelius.com", 0x1234);

uint8_t expect[] = {
  0x12, 0x34, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00,  // 8
  0x00, 0x00, 0x00, 0x00, 0x04, 0x69, 0x70, 0x76,  // 16
  0x36, 0x06, 0x61, 0x65, 0x6c, 0x69, 0x75, 0x73,  // 24
  0x03, 0x63, 0x6f, 0x6d, 0x00, 0x00, 0x1c, 0x00,  // 32
  0x01
};

ck_assert_int_eq(len, sizeof(expect));
ck_assert(memcmp(expect, buffer, sizeof(expect)) == 0);


#test dnsProcessReply_ipv6_aelius
uint8_t expect[16] = {
    0x20, 0x01, 0x41, 0xc8, 0x00, 0x51, 0x07, 0xcf,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06
};

uint8_t replyPayload[] = {
    0x12, 0x34, 0x81, 0x80, 0x00, 0x01, 0x00, 0x01,
    0x00, 0x03, 0x00, 0x00, 0x04, 0x69, 0x70, 0x76,
    0x36, 0x06, 0x61, 0x65, 0x6c, 0x69, 0x75, 0x73,
    0x03, 0x63, 0x6f, 0x6d, 0x00, 0x00, 0x1c, 0x00,
    0x01, 0xc0, 0x0c, 0x00, 0x1c, 0x00, 0x01, 0x00,
    0x00, 0x03, 0x71, 0x00, 0x10, 0x20, 0x01, 0x41,
    0xc8, 0x00, 0x51, 0x07, 0xcf, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x06, 0xc0, 0x11, 0x00,
    0x02, 0x00, 0x01, 0x00, 0x00, 0x03, 0x70, 0x00,
    0x15, 0x01, 0x61, 0x02, 0x6e, 0x73, 0x08, 0x62,
    0x79, 0x74, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x02,
    0x63, 0x6f, 0x02, 0x75, 0x6b, 0x00, 0xc0, 0x11,
    0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x03, 0x70,
    0x00, 0x04, 0x01, 0x62, 0xc0, 0x4b, 0xc0, 0x11,
    0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x03, 0x70,
    0x00, 0x04, 0x01, 0x63, 0xc0, 0x4b,
};

IPv6Address *addr = dnsProcessReply(replyPayload, sizeof(replyPayload), 0x1234);

ck_assert_ptr_ne(addr, NULL);
ck_assert(memcmp(expect, addr, sizeof(expect)) == 0);
